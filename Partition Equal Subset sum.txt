class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        boolean ans=false;
        for(int i=0;i<nums.length;i++)
        {
            sum+=nums[i];
        }
        if(sum%2==1)
        {
            return false;
        }
        else
        {
            int half=sum/2;
            ans=isSubsetSum(nums,half);
        }
        return ans;
    }
      static Boolean isSubsetSum(int arr[], int target) {
        boolean[][] dp = new boolean[arr.length + 1] [target+1] ;
        for(int i = 0 ; i < dp.length ; i++){
            for(int j = 0 ; j < dp[0].length ; j++){
                if(i == 0 && j==0) dp[i][j] = true;
                else if(i == 0) dp[i][j] = false ; 
                else if (j==0) dp[i][j] = true ; 
                else{
                    if(j >= arr[i-1]){
                        int rsum = j - arr[i-1] ; 
                        dp[i][j] = dp[i-1][rsum] || dp[i-1][j] ; 
                    }
                    else{
                        dp[i][j] = dp[i-1][j] ; 
                    }
                }
                
            }
        }
        return dp[dp.length-1][dp[0].length-1] ; 
        
    }
    
}